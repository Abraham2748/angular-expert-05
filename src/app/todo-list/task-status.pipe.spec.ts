import { TaskStatusPipe } from './task-status.pipe';
import { Task } from './task.model';

describe('TaskStatusPipe', () => {
  let pipe: TaskStatusPipe;

  beforeEach(() => {
    pipe = new TaskStatusPipe();

    //Fijamos la fecha actual para hacer tests determinantes
    jasmine.clock().install();
    jasmine.clock().mockDate(new Date('2025-05-16T12:00:00'));
  });

  afterEach(() => {
    jasmine.clock().uninstall();
  });

  it('deber√≠a mostrar "‚úÖ Tarea completada" si task.completed es true', () => {
    const task: Task = {
      id: 1,
      title: 'Tarea',
      dueDate: new Date(),
      completed: true,
    };
    const resultado = pipe.transform(task);
    expect(resultado).toEqual('‚úÖ Tarea completada');
  });

  it('deber√≠a mostrar "‚ùó Tarea Atrasada" si task.dueDate fue ayer o antes', () => {
    const yesterday = new Date('2025-05-15T12:00:00');
    const task: Task = {
      id: 2,
      title: 'Tarea atrasada',
      dueDate: yesterday,
      completed: false,
    };
    const resultado = pipe.transform(task);
    expect(resultado).toEqual('‚ùó Tarea Atrasada');
  });

  it('deber√≠a mostrar "üìÖ Completar Hoy!" si task.dueDate es hoy', () => {
    const today = new Date('2025-05-16T12:00:00');
    const task: Task = {
      id: 3,
      title: 'Tarea para hoy',
      dueDate: today,
      completed: false,
    };
    const resultado = pipe.transform(task);
    expect(resultado).toEqual('üìÖ Completar Hoy!');
  });
  it('deber√≠a mostrar "üîú Tarea para Ma√±ana" si task.dueDate es ma√±ana', () => {
    const tomorrow = new Date('2025-05-17T12:00:00');
    const task: Task = {
      id: 4,
      title: 'Tarea para ma√±ana',
      dueDate: tomorrow,
      completed: false,
    };
    const resultado = pipe.transform(task);
    expect(resultado).toEqual('üîú Tarea para Ma√±ana');
  });
  it('deber√≠a mostrar "‚è≥ Faltan N d√≠as" si task.dueDate es mas mayor a ma√±ana', () => {
    const inFiveDays = new Date('2025-05-21T12:00:00');
    const task: Task = {
      id: 5,
      title: 'Tarea futura',
      dueDate: inFiveDays,
      completed: false,
    };
    const resultado = pipe.transform(task);
    expect(resultado).toEqual('‚è≥ Faltan 5 d√≠as');
  });
});
